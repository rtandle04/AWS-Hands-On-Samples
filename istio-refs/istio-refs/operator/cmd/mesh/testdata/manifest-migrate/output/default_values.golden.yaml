apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  creationTimestamp: null
spec:
  addonComponents:
    grafana:
      enabled: false
    istiocoredns:
      enabled: false
    kiali:
      enabled: false
    prometheus:
      enabled: true
      k8s:
        nodeSelector: {}
        replicaCount: 1
        tolerations: []
  components:
    citadel:
      enabled: true
      k8s:
        nodeSelector: {}
        replicaCount: 1
        strategy:
          rollingUpdate:
            maxSurge: 100%
            maxUnavailable: 25%
        tolerations: []
    egressGateways:
    - enabled: true
      k8s:
        env:
        - name: ISTIO_META_ROUTER_MODE
          value: sni-dnat
        hpaSpec:
          maxReplicas: 5
          metrics:
          - resource:
              name: cpu
              targetAverageUtilization: 80
            type: Resource
          minReplicas: 1
          scaleTargetRef:
            apiVersion: apps/v1
            kind: Deployment
            name: istio-istio-egressgateway
        nodeSelector: {}
        podAnnotations: {}
        resources:
          limits:
            cpu: 2000m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        serviceAnnotations: {}
        strategy:
          rollingUpdate:
            maxSurge: 100%
            maxUnavailable: 25%
        tolerations: []
      name: istio-egressgateway
    galley:
      enabled: true
      k8s:
        nodeSelector: {}
        replicaCount: 1
        resources:
          requests:
            cpu: 100m
        strategy:
          rollingUpdate:
            maxSurge: 100%
            maxUnavailable: 25%
        tolerations: []
    ingressGateways:
    - enabled: true
      k8s:
        env:
        - name: ISTIO_META_ROUTER_MODE
          value: sni-dnat
        hpaSpec:
          maxReplicas: 5
          metrics:
          - resource:
              name: cpu
              targetAverageUtilization: 80
            type: Resource
          minReplicas: 1
          scaleTargetRef:
            apiVersion: apps/v1
            kind: Deployment
            name: istio-istio-ingressgateway
        nodeSelector: {}
        podAnnotations: {}
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 128Mi
        serviceAnnotations: {}
        strategy:
          rollingUpdate:
            maxSurge: 100%
            maxUnavailable: 25%
        tolerations: []
      name: istio-ingressgateway
    pilot:
      enabled: true
      k8s:
        env:
        - name: GODEBUG
          value: gctrace=1
        hpaSpec:
          maxReplicas: 5
          metrics:
          - resource:
              name: cpu
              targetAverageUtilization: 80
            type: Resource
          minReplicas: 1
          scaleTargetRef:
            apiVersion: apps/v1
            kind: Deployment
            name: istio-pilot
        nodeSelector: {}
        replicaCount: 1
        resources:
          requests:
            cpu: 500m
            memory: 2048Mi
        strategy:
          rollingUpdate:
            maxSurge: 100%
            maxUnavailable: 25%
        tolerations: []
    policy:
      enabled: true
      k8s:
        env:
        - name: GODEBUG
          value: gctrace=1
        hpaSpec:
          maxReplicas: 5
          metrics:
          - resource:
              name: cpu
              targetAverageUtilization: 80
            type: Resource
          minReplicas: 1
          scaleTargetRef:
            apiVersion: apps/v1
            kind: Deployment
            name: istio-policy
        nodeSelector: {}
        podAnnotations: {}
        replicaCount: 1
        strategy:
          rollingUpdate:
            maxSurge: 100%
            maxUnavailable: 25%
        tolerations: []
    telemetry:
      enabled: true
      k8s:
        hpaSpec:
          maxReplicas: 5
          metrics:
          - resource:
              name: cpu
              targetAverageUtilization: 80
            type: Resource
          minReplicas: 1
          scaleTargetRef:
            apiVersion: apps/v1
            kind: Deployment
            name: istio-telemetry
        nodeSelector: {}
        replicaCount: 1
        resources:
          limits:
            cpu: 4800m
            memory: 4G
          requests:
            cpu: 1000m
            memory: 1G
        strategy:
          rollingUpdate:
            maxSurge: 100%
            maxUnavailable: 25%
        tolerations: []
  hub: gcr.io/istio-release
  tag: master-latest-daily
  values:
    certmanager:
      enabled: false
      hub: quay.io/jetstack
      image: cert-manager-controller
      podAntiAffinityLabelSelector: []
      podAntiAffinityTermLabelSelector: []
      replicaCount: 1
      tag: v0.6.2
      tolerations: []
    cni:
      cniBinDir: /opt/cni/bin
      cniConfDir: /etc/cni/net.d
      enabled: false
      excludeNamespaces:
      - istio-system
      hub: gcr.io/istio-release
      logLevel: info
      pullPolicy: Always
      tag: master-latest-daily
    galley:
      image: galley
      podAntiAffinityLabelSelector: []
      podAntiAffinityTermLabelSelector: []
    gateways:
      istio-egressgateway:
        connectTimeout: 10s
        drainDuration: 45s
        podAntiAffinityLabelSelector: []
        podAntiAffinityTermLabelSelector: []
        ports:
        - name: http2
          port: 80
        - name: https
          port: 443
        - name: tls
          port: 15443
          targetPort: 15443
        secretVolumes:
        - mountPath: /etc/istio/egressgateway-certs
          name: egressgateway-certs
          secretName: istio-egressgateway-certs
        - mountPath: /etc/istio/egressgateway-ca-certs
          name: egressgateway-ca-certs
          secretName: istio-egressgateway-ca-certs
        type: ClusterIP
        zvpn:
          enabled: true
          suffix: global
      istio-ingressgateway:
        applicationPorts: ""
        debug: info
        domain: ""
        externalIPs: []
        loadBalancerIP: ""
        loadBalancerSourceRanges: []
        meshExpansionPorts:
        - name: tcp-pilot-grpc-tls
          port: 15011
          targetPort: 15011
        - name: tcp-citadel-grpc-tls
          port: 8060
          targetPort: 8060
        - name: tcp-dns-tls
          port: 853
          targetPort: 853
        podAntiAffinityLabelSelector: []
        podAntiAffinityTermLabelSelector: []
        ports:
        - name: status-port
          port: 15020
          targetPort: 15020
        - name: http2
          port: 80
          targetPort: 80
        - name: https
          port: 443
        - name: kiali
          port: 15029
          targetPort: 15029
        - name: prometheus
          port: 15030
          targetPort: 15030
        - name: grafana
          port: 15031
          targetPort: 15031
        - name: tracing
          port: 15032
          targetPort: 15032
        - name: tls
          port: 15443
          targetPort: 15443
        secretVolumes:
        - mountPath: /etc/istio/ingressgateway-certs
          name: ingressgateway-certs
          secretName: istio-ingressgateway-certs
        - mountPath: /etc/istio/ingressgateway-ca-certs
          name: ingressgateway-ca-certs
          secretName: istio-ingressgateway-ca-certs
        telemetry_addon_gateways:
          grafana_gateway:
            desPort: 3000
            enabled: false
            name: grafana
            port: 15031
            tls: false
          kiali_gateway:
            desPort: 20001
            enabled: false
            name: kiali
            port: 15029
            tls: false
          prometheus_gateway:
            desPort: 9090
            enabled: false
            name: prometheus
            port: 15030
            tls: false
          tracing_gateway:
            desPort: 80
            enabled: false
            name: tracing
            port: 15032
            tls: false
        telemetry_domain_name: ""
        type: LoadBalancer
        zvpn:
          enabled: true
          suffix: global
    global:
      arch:
        amd64: 2
        ppc64le: 2
        s390x: 2
      configValidation: true
      controlPlaneSecurityEnabled: false
      defaultPodDisruptionBudget:
        enabled: true
      defaultResources:
        requests:
          cpu: 10m
      defaultTolerations: []
      disablePolicyChecks: true
      enableHelmTest: false
      enableTracing: true
      imagePullPolicy: IfNotPresent
      imagePullSecrets: []
      k8sIngress:
        enableHttps: false
        enabled: false
        gatewayName: ingressgateway
      localityLbSetting:
        enabled: true
      logging:
        level: default:info
      meshExpansion:
        enabled: false
        useILB: false
      meshID: ""
      monitoringPort: 15014
      mtls:
        enabled: false
      multiCluster:
        enabled: false
      oneNamespace: false
      policyCheckFailOpen: false
      priorityClassName: ""
      proxy:
        accessLogEncoding: TEXT
        accessLogFile: ""
        accessLogFormat: ""
        autoInject: enabled
        clusterDomain: cluster.local
        componentLogLevel: ""
        concurrency: 2
        dnsRefreshRate: 300s
        enableCoreDump: false
        envoyAccessLogService:
          enabled: false
          tcpKeepalive:
            interval: 10s
            probes: 3
            time: 10s
          tlsSettings:
            mode: DISABLE
            subjectAltNames: []
        envoyMetricsService:
          enabled: false
        envoyStatsd:
          enabled: false
        excludeIPRanges: ""
        excludeInboundPorts: ""
        excludeOutboundPorts: ""
        image: proxyv2
        includeIPRanges: '*'
        includeInboundPorts: '*'
        kubevirtInterfaces: ""
        logLevel: ""
        privileged: false
        protocolDetectionTimeout: 10ms
        readinessFailureThreshold: 30
        readinessInitialDelaySeconds: 1
        readinessPeriodSeconds: 2
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 128Mi
        statusPort: 15020
        tracer: zipkin
      proxy_init:
        image: proxy_init
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 10Mi
      sds:
        enabled: false
        udsPath: ""
      tracer:
        datadog:
          address: $(HOST_IP):8126
        lightstep:
          accessToken: ""
          address: ""
          cacertPath: ""
          secure: true
        zipkin:
          address: ""
      trustDomain: ""
      useMCP: true
    grafana:
      accessMode: ReadWriteMany
      contextPath: /grafana
      dashboardProviders:
        dashboardproviders:
          yaml:
            apiVersion: 1
            providers:
            - disableDeletion: false
              folder: istio
              name: istio
              options:
                path: /var/lib/grafana/dashboards/istio
              orgId: 1
              type: file
      datasources:
        datasources:
          yaml:
            apiVersion: 1
            datasources:
            - access: proxy
              editable: true
              isDefault: true
              jsonData:
                timeInterval: 5s
              name: Prometheus
              orgId: 1
              type: prometheus
              url: http://prometheus:9090
      image:
        repository: grafana/grafana
        tag: 6.1.6
      ingress:
        enabled: false
        hosts:
        - grafana.local
      persist: false
      podAntiAffinityLabelSelector: []
      podAntiAffinityTermLabelSelector: []
      replicaCount: 1
      security:
        enabled: false
        passphraseKey: passphrase
        secretName: grafana
        usernameKey: username
      service:
        externalPort: 3000
        name: http
        type: ClusterIP
      storageClassName: ""
      tolerations: []
    istiocoredns:
      coreDNSImage: coredns/coredns:1.1.2
      coreDNSPluginImage: istio/coredns-plugin:0.2-istio-1.1
      podAntiAffinityLabelSelector: []
      podAntiAffinityTermLabelSelector: []
      replicaCount: 1
      tolerations: []
    kiali:
      contextPath: /kiali
      createDemoSecret: false
      dashboard:
        auth:
          strategy: login
        grafanaInClusterURL: http://grafana:3000
        jaegerInClusterURL: http://tracing/jaeger
        secretName: kiali
        viewOnlyMode: false
      hub: quay.io/kiali
      image: kiali
      ingress:
        enabled: false
        hosts:
        - kiali.local
      podAntiAffinityLabelSelector: []
      podAntiAffinityTermLabelSelector: []
      replicaCount: 1
      security:
        cert_file: /kiali-cert/cert-chain.pem
        enabled: true
        private_key_file: /kiali-cert/key.pem
      tag: v1.1.0
      tolerations: []
    mixer:
      policy:
        adapters:
          kubernetesenv:
            enabled: true
        image: mixer
        podAntiAffinityLabelSelector: []
        podAntiAffinityTermLabelSelector: []
      telemetry:
        image: mixer
        loadshedding:
          latencyThreshold: 100ms
          mode: enforce
        podAntiAffinityLabelSelector: []
        podAntiAffinityTermLabelSelector: []
        reportBatchMaxEntries: 100
        reportBatchMaxTime: 1s
        sessionAffinityEnabled: false
        useMCP: true
    pilot:
      appNamespaces: []
      configMap: true
      configNamespace: istio-config
      image: pilot
      ingress:
        ingressClass: istio
        ingressControllerMode: "OFF"
        ingressService: istio-ingressgateway
      keepaliveMaxServerConnectionAge: 30m
      podAntiAffinityLabelSelector: []
      podAntiAffinityTermLabelSelector: []
      policy:
        enabled: false
      traceSampling: 1
      useMCP: true
    prometheus:
      contextPath: /prometheus
      hub: docker.io/prom
      image: prometheus
      ingress:
        enabled: false
        hosts:
        - prometheus.local
      podAntiAffinityLabelSelector: []
      podAntiAffinityTermLabelSelector: []
      retention: 6h
      scrapeInterval: 15s
      security:
        enabled: true
      service:
        nodePort:
          enabled: false
          port: 32090
      tag: v2.8.0
    security:
      dnsCerts:
        istio-galley-service-account:
          istio-config: istio-galley.istio-config.svc
          istio-control: istio-galley.istio-control.svc
          istio-control-master: istio-galley.istio-control-master.svc
          istio-master: istio-galley.istio-master.svc
          istio-pilot11: istio-galley.istio-pilot11.svc
        istio-pilot-service-account:
          istio-control: istio-pilot-service-account.istio-control
          istio-pilot11: istio-pilot-service-account.istio-system
        istio-sidecar-injector-service-account:
          istio-control: istio-sidecar-injector.istio-control.svc
          istio-control-master: istio-sidecar-injector.istio-control-master.svc
          istio-master: istio-sidecar-injector.istio-master.svc
          istio-pilot11: istio-sidecar-injector.istio-pilot11.svc
          istio-remote: istio-sidecar-injector.istio-remote.svc
      enableNamespacesByDefault: true
      image: citadel
      podAntiAffinityLabelSelector: []
      podAntiAffinityTermLabelSelector: []
      selfSigned: true
      trustDomain: cluster.local
      workloadCertTtl: 2160h
    sidecarInjectorWebhook:
      alwaysInjectSelector: []
      enableNamespacesByDefault: false
      enabled: true
      injectLabel: istio-injection
      neverInjectSelector: []
      rewriteAppHTTPProbe: true
      selfSigned: false
    tracing:
      enabled: false
      ingress:
        enabled: false
      jaeger:
        accessMode: ReadWriteMany
        hub: docker.io/jaegertracing
        image: all-in-one
        memory:
          max_traces: 50000
        persist: false
        spanStorageType: badger
        storageClassName: ""
        tag: 1.16
      podAntiAffinityLabelSelector: []
      podAntiAffinityTermLabelSelector: []
      provider: jaeger
      service:
        externalPort: 9411
        name: http
        type: ClusterIP
      tolerations: []
      zipkin:
        hub: docker.io/openzipkin
        image: zipkin
        javaOptsHeap: 700
        maxSpans: 500000
        node:
          cpus: 2
        probeStartupDelay: 200
        queryPort: 9411
        resources:
          limits:
            cpu: 300m
            memory: 900Mi
          requests:
            cpu: 150m
            memory: 900Mi
        tag: 2.14.2

